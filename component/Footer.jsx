"use client";
import Image from "next/image";
import { useEffect, useState } from "react";
import logo from "../public/images/logo.png";
import LoginComponent from "./LoginComponent";

// Composants SVG pour les icÃ´nes
const FacebookIcon = () => (
  <svg width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
  <rect x="0.5" y="0.5" width="47" height="47" rx="23.5" stroke="white"/>
  <path d="M26.0796 19.5454H27.3329V17.4254C26.7261 17.3623 26.1163 17.3311 25.5063 17.3321C23.6929 17.3321 22.4529 18.4387 22.4529 20.4654V22.2121H20.4062V24.5854H22.4529V30.6654H24.9063V24.5854H26.9463L27.2529 22.2121H24.9063V20.6987C24.9063 19.9987 25.0929 19.5454 26.0796 19.5454Z" fill="white"/>
  </svg>

);

const SnapIcon = () => (
  <svg width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
  <rect x="0.5" y="0.5" width="47" height="47" rx="23.5" stroke="white"/>
  <path d="M30.6177 27.0403C30.5244 26.7869 30.331 26.6669 30.1444 26.5403C30.111 26.5203 30.071 26.5003 30.0444 26.4869C29.9977 26.4536 29.9244 26.4269 29.8644 26.3936C29.2377 26.0603 28.7444 25.6403 28.4044 25.1469C28.313 25.0056 28.2306 24.8586 28.1577 24.7069C28.131 24.6203 28.131 24.5736 28.151 24.5336C28.171 24.5003 28.1977 24.4669 28.231 24.4469C28.331 24.3736 28.451 24.3069 28.5244 24.2536C28.6644 24.1669 28.7644 24.1003 28.831 24.0536C29.091 23.8736 29.271 23.6669 29.3844 23.4669C29.5444 23.1669 29.5644 22.8136 29.4377 22.5003C29.271 22.0536 28.8444 21.7736 28.331 21.7736C28.2244 21.7736 28.1177 21.7869 27.9977 21.8069C27.9977 21.8136 27.9577 21.8203 27.931 21.8269C27.931 21.5203 27.9244 21.2003 27.8977 20.8803C27.8044 19.7603 27.411 19.1736 26.9977 18.7069C26.7377 18.4136 26.431 18.1603 26.091 17.9669C25.471 17.6136 24.7644 17.4336 23.9977 17.4336C23.231 17.4336 22.531 17.6136 21.911 17.9669C21.5644 18.1603 21.2577 18.4136 20.9977 18.7069C20.5844 19.1736 20.1977 19.7603 20.0977 20.8803C20.071 21.2003 20.0644 21.5203 20.071 21.8269C20.0377 21.8203 19.9977 21.8136 19.9977 21.8069C19.8777 21.7869 19.771 21.7736 19.6644 21.7736C19.151 21.7736 18.7244 22.0536 18.5577 22.5003C18.431 22.8136 18.451 23.1669 18.611 23.4669C18.7244 23.6669 18.9044 23.8736 19.1644 24.0536C19.231 24.1003 19.331 24.1669 19.471 24.2603L19.751 24.4403C19.791 24.4669 19.8177 24.5003 19.8444 24.5336C19.8644 24.5803 19.8644 24.6269 19.831 24.7136C19.7644 24.8669 19.6844 25.0003 19.591 25.1469C19.2577 25.6336 18.7844 26.0469 18.1777 26.3736C17.851 26.5469 17.5177 26.6669 17.3777 27.0403C17.271 27.3336 17.331 27.6669 17.611 27.9403C17.711 28.0403 17.8244 28.1269 17.951 28.1936C18.2177 28.3336 18.4977 28.4536 18.7844 28.5269C18.8444 28.5469 18.9044 28.5669 18.951 28.6069C19.051 28.6869 19.0377 28.8203 19.171 29.0003C19.2377 29.1069 19.331 29.1936 19.4177 29.2603C19.691 29.4536 19.9977 29.4603 20.331 29.4736C20.6244 29.4869 20.9577 29.5003 21.331 29.6269C21.5044 29.6669 21.6644 29.7803 21.8577 29.9003C22.331 30.1803 22.9444 30.5669 23.9977 30.5669C25.0444 30.5669 25.6644 30.1803 26.1444 29.8936C26.331 29.7803 26.4977 29.6669 26.6644 29.6269C27.031 29.5003 27.371 29.4869 27.6644 29.4736C27.9977 29.4669 28.3044 29.4536 28.5777 29.2603C28.691 29.1803 28.7844 29.0736 28.8577 28.9536C28.951 28.7936 28.951 28.6669 29.0377 28.6069C29.0844 28.5736 29.1377 28.5469 29.1977 28.5336C29.491 28.4536 29.771 28.3336 30.0377 28.1936C30.1777 28.1203 30.2977 28.0269 30.3977 27.9136H30.4044C30.6644 27.6403 30.7177 27.3336 30.6177 27.0403ZM29.6844 27.5403C29.111 27.8536 28.731 27.8203 28.4377 28.0003C28.331 28.0803 28.2977 28.1869 28.2777 28.2936L28.2577 28.4269C28.2444 28.5203 28.2244 28.6003 28.1577 28.6469C27.931 28.8003 27.271 28.6336 26.4177 28.9136C25.711 29.1469 25.2644 29.8203 23.9977 29.8203C22.731 29.8203 22.2977 29.1536 21.5777 28.9136C20.731 28.6336 20.0644 28.8003 19.8444 28.6469C19.6644 28.5203 19.811 28.1736 19.5577 28.0003C19.2644 27.8203 18.8844 27.8536 18.331 27.5403C18.1244 27.4336 18.091 27.3336 18.1177 27.2869C18.1444 27.2269 18.2244 27.1803 18.2777 27.1536C19.3777 26.6269 19.9977 25.9403 20.311 25.4003C20.6044 24.9203 20.6644 24.5536 20.6844 24.5003C20.7044 24.3603 20.7244 24.2536 20.571 24.1136C20.4244 23.9736 19.771 23.5736 19.591 23.4469C19.2844 23.2336 19.1577 23.0269 19.251 22.7669C19.331 22.5869 19.4844 22.5203 19.6644 22.5203C19.7177 22.5203 19.771 22.5269 19.8244 22.5403C20.1577 22.6069 20.4777 22.7736 20.6644 22.8203C20.6844 22.8269 20.7044 22.8269 20.731 22.8269C20.791 22.8269 20.8244 22.8069 20.8444 22.7669C20.851 22.7403 20.8577 22.7069 20.8577 22.6669C20.831 22.3069 20.7844 21.6069 20.8377 20.9469C20.8644 20.6669 20.911 20.4269 20.971 20.2203C21.1044 19.7669 21.331 19.4669 21.5577 19.1936C21.7244 19.0003 22.4977 18.1803 23.9977 18.1803C25.231 18.1803 25.971 18.7403 26.291 19.0403C26.3577 19.1069 26.411 19.1603 26.4377 19.1936C26.691 19.4869 26.9177 19.8069 27.051 20.3136C27.0977 20.4936 27.1377 20.7069 27.1577 20.9469C27.211 21.6003 27.1644 22.3069 27.1377 22.6669C27.1377 22.6936 27.1377 22.7203 27.1444 22.7403C27.151 22.8003 27.191 22.8269 27.2644 22.8269C27.291 22.8269 27.311 22.8269 27.331 22.8203C27.5177 22.7736 27.8377 22.6069 28.171 22.5336C28.2244 22.5269 28.2777 22.5203 28.331 22.5203C28.4977 22.5203 28.6644 22.5803 28.731 22.7336L28.7377 22.7603H28.7444V22.7669C28.8444 23.0203 28.711 23.2336 28.411 23.4403C28.231 23.5669 27.571 23.9736 27.4244 24.1069C27.271 24.2536 27.291 24.3603 27.311 24.5003C27.331 24.5669 27.451 25.2003 28.051 25.9069C28.4177 26.3336 28.9444 26.7803 29.7177 27.1536C29.7644 27.1736 29.8244 27.2069 29.8577 27.2469C29.8777 27.2803 29.891 27.3069 29.8844 27.3336C29.8777 27.4003 29.8177 27.4669 29.6844 27.5403Z" fill="white"/>
  </svg>
  

);


const TwitterIcon = () => (
  <svg width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
    <rect x="0.5" y="0.5" width="47" height="47" rx="23.5" stroke="white"/>
    <g clipPath="url(#clip0_68_404)">
      <mask
        id="mask0_68_404"
        maskUnits="userSpaceOnUse"
        x="16"
        y="16"
        width="16"
        height="16"
        style={{ maskType: "luminance" }}
      >
        <path d="M16 16H32V32H16V16Z" fill="white"/>
      </mask>
      <g mask="url(#mask0_68_404)">
        <path d="M28.6 16.75H31.0537L25.6937 22.8917L32 31.2506H27.0629L23.1931 26.182L18.7703 31.2506H16.3143L22.0469 24.6791L16 16.7511H21.0629L24.5554 21.3831L28.6 16.75ZM27.7371 29.7786H29.0971L20.32 18.1454H18.8617L27.7371 29.7786Z" fill="white"/>
      </g>
    </g>
    <defs>
      <clipPath id="clip0_68_404">
        <rect width="16" height="16" fill="white" transform="translate(16 16)"/>
      </clipPath>
    </defs>
  </svg>
);

const InstagramIcon = () => (
  <svg width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
  <rect x="0.5" y="0.5" width="47" height="47" rx="23.5" stroke="white"/>
  <path d="M27.5626 19.6387C27.4044 19.6387 27.2497 19.6856 27.1181 19.7735C26.9866 19.8614 26.8841 19.9864 26.8235 20.1326C26.7629 20.2787 26.7471 20.4396 26.778 20.5948C26.8089 20.75 26.885 20.8925 26.9969 21.0044C27.1088 21.1163 27.2513 21.1925 27.4065 21.2233C27.5617 21.2542 27.7225 21.2384 27.8687 21.1778C28.0149 21.1173 28.1399 21.0147 28.2278 20.8832C28.3157 20.7516 28.3626 20.5969 28.3626 20.4387C28.3626 20.2265 28.2783 20.023 28.1283 19.873C27.9783 19.723 27.7748 19.6387 27.5626 19.6387ZM30.6293 21.252C30.6163 20.6989 30.5127 20.1516 30.3226 19.632C30.1531 19.1875 29.8893 18.7849 29.5493 18.452C29.2191 18.1103 28.8157 17.8482 28.3693 17.6854C27.8511 17.4895 27.3031 17.3835 26.7493 17.372C26.0426 17.332 25.8159 17.332 24.0026 17.332C22.1893 17.332 21.9626 17.332 21.2559 17.372C20.702 17.3835 20.1542 17.4895 19.6359 17.6854C19.1904 17.8498 18.7872 18.1117 18.4559 18.452C18.1142 18.7822 17.8521 19.1857 17.6893 19.632C17.4934 20.1503 17.3874 20.6981 17.3759 21.252C17.3359 21.9587 17.3359 22.1854 17.3359 23.9987C17.3359 25.812 17.3359 26.0387 17.3759 26.7454C17.3874 27.2992 17.4934 27.8472 17.6893 28.3654C17.8521 28.8118 18.1142 29.2152 18.4559 29.5454C18.7872 29.8856 19.1904 30.1476 19.6359 30.312C20.1542 30.5079 20.702 30.6139 21.2559 30.6254C21.9626 30.6654 22.1893 30.6654 24.0026 30.6654C25.8159 30.6654 26.0426 30.6654 26.7493 30.6254C27.3031 30.6139 27.8511 30.5079 28.3693 30.312C28.8157 30.1492 29.2191 29.8871 29.5493 29.5454C29.8907 29.2138 30.1548 28.8108 30.3226 28.3654C30.5127 27.8458 30.6163 27.2985 30.6293 26.7454C30.6293 26.0387 30.6693 25.812 30.6693 23.9987C30.6693 22.1854 30.6693 21.9587 30.6293 21.252ZM29.4293 26.6654C29.4244 27.0886 29.3478 27.5078 29.2026 27.9054C29.0961 28.1955 28.9252 28.4576 28.7026 28.672C28.4863 28.8924 28.2247 29.063 27.9359 29.172C27.5384 29.3172 27.1191 29.3938 26.6959 29.3987C26.0293 29.432 25.7826 29.4387 24.0293 29.4387C22.2759 29.4387 22.0293 29.4387 21.3626 29.3987C20.9232 29.4069 20.4857 29.3393 20.0693 29.1987C19.7931 29.0841 19.5435 28.9139 19.3359 28.6987C19.1147 28.4845 18.9458 28.2222 18.8426 27.932C18.6798 27.5288 18.5896 27.1 18.5759 26.6654C18.5759 25.9987 18.5359 25.752 18.5359 23.9987C18.5359 22.2454 18.5359 21.9987 18.5759 21.332C18.5789 20.8994 18.6579 20.4707 18.8093 20.0654C18.9266 19.784 19.1068 19.5331 19.3359 19.332C19.5385 19.1028 19.7888 18.9208 20.0693 18.7987C20.4756 18.6521 20.9039 18.5754 21.3359 18.572C22.0026 18.572 22.2493 18.532 24.0026 18.532C25.7559 18.532 26.0026 18.532 26.6693 18.572C27.0925 18.5769 27.5117 18.6535 27.9093 18.7987C28.2122 18.9111 28.4841 19.0939 28.7026 19.332C28.9211 19.5368 29.0918 19.7872 29.2026 20.0654C29.3508 20.4713 29.4275 20.8999 29.4293 21.332C29.4626 21.9987 29.4693 22.2454 29.4693 23.9987C29.4693 25.752 29.4626 25.9987 29.4293 26.6654ZM24.0026 20.5787C23.3265 20.58 22.6659 20.7817 22.1044 21.1583C21.5428 21.5349 21.1055 22.0695 20.8477 22.6946C20.5899 23.3196 20.5231 24.007 20.6558 24.67C20.7885 25.333 21.1148 25.9417 21.5933 26.4194C22.0719 26.897 22.6813 27.222 23.3445 27.3534C24.0077 27.4849 24.6951 27.4168 25.3196 27.1577C25.9441 26.8987 26.4779 26.4603 26.8533 25.898C27.2289 25.3358 27.4293 24.6748 27.4293 23.9987C27.4301 23.5488 27.3421 23.1031 27.1701 22.6874C26.9981 22.2716 26.7457 21.8939 26.4272 21.5761C26.1087 21.2582 25.7305 21.0065 25.3145 20.8353C24.8983 20.6642 24.4525 20.5769 24.0026 20.5787ZM24.0026 26.2187C23.5635 26.2187 23.1343 26.0885 22.7693 25.8446C22.4042 25.6006 22.1196 25.2539 21.9516 24.8482C21.7836 24.4426 21.7396 23.9962 21.8253 23.5656C21.9109 23.135 22.1224 22.7394 22.4328 22.4289C22.7433 22.1185 23.1389 21.907 23.5695 21.8214C24.0001 21.7357 24.4465 21.7797 24.8521 21.9477C25.2578 22.1157 25.6045 22.4003 25.8485 22.7654C26.0924 23.1304 26.2226 23.5596 26.2226 23.9987C26.2226 24.2902 26.1652 24.5789 26.0536 24.8482C25.9421 25.1176 25.7785 25.3623 25.5724 25.5685C25.3662 25.7746 25.1215 25.9382 24.8521 26.0497C24.5828 26.1613 24.2941 26.2187 24.0026 26.2187Z" fill="white"/>
  </svg>

);

const TikTokIcon = () => (
  <svg width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
  <rect x="0.5" y="0.5" width="47" height="47" rx="23.5" stroke="white"/>
  <path fillRule="evenodd" clipRule="evenodd" d="M25.332 18C25.5088 18 25.6784 18.0702 25.8034 18.1953C25.9285 18.3203 25.9987 18.4899 25.9987 18.6667C25.9991 19.2813 26.2115 19.8769 26.6002 20.3531C26.9889 20.8292 27.5299 21.1566 28.132 21.28C28.3053 21.3154 28.4574 21.4181 28.555 21.5656C28.6525 21.7132 28.6874 21.8934 28.652 22.0667C28.6167 22.2399 28.5139 22.3921 28.3664 22.4896C28.2189 22.5871 28.0386 22.622 27.8654 22.5867C27.1708 22.4443 26.5266 22.1199 25.9987 21.6467V27.3333C25.9987 27.9926 25.8032 28.6371 25.4369 29.1852C25.0707 29.7334 24.5501 30.1606 23.941 30.4129C23.3319 30.6652 22.6617 30.7312 22.0151 30.6026C21.3685 30.474 20.7745 30.1565 20.3083 29.6904C19.8422 29.2242 19.5247 28.6302 19.3961 27.9836C19.2675 27.337 19.3335 26.6668 19.5858 26.0577C19.8381 25.4486 20.2653 24.928 20.8135 24.5618C21.3616 24.1955 22.0061 24 22.6654 24C22.8422 24 23.0117 24.0702 23.1368 24.1953C23.2618 24.3203 23.332 24.4899 23.332 24.6667C23.332 24.8435 23.2618 25.013 23.1368 25.1381C23.0117 25.2631 22.8422 25.3333 22.6654 25.3333C22.2698 25.3333 21.8831 25.4506 21.5542 25.6704C21.2253 25.8902 20.969 26.2025 20.8176 26.568C20.6662 26.9334 20.6266 27.3356 20.7038 27.7235C20.781 28.1115 20.9714 28.4678 21.2512 28.7475C21.5309 29.0273 21.8872 29.2177 22.2752 29.2949C22.6631 29.3721 23.0653 29.3325 23.4307 29.1811C23.7962 29.0297 24.1085 28.7734 24.3283 28.4445C24.5481 28.1156 24.6654 27.7289 24.6654 27.3333V18.6667C24.6654 18.4899 24.7356 18.3203 24.8606 18.1953C24.9857 18.0702 25.1552 18 25.332 18Z" fill="white"/>
  </svg>

);

const Footer = () => {

  const [showLogin, setShowLogin] = useState(false);


  const scrollToSection = (id) => {
    const cleanId = id.replace(/^[\/#]+/, '');
    const el = document.getElementById(cleanId);
    if (el) {
      el.scrollIntoView({ behavior: "smooth" });
    } else {
      console.warn(`Element not found: ${id}`);
    }
  };


  // Data
  const currentYear = new Date().getFullYear();
  const [lang, setLang] = useState("ar");

  useEffect(() => {
    if (typeof window === "undefined") return;
    const stored = window.localStorage.getItem("lang");
    if (stored === "ar" || stored === "en") setLang(stored);
    const onLangChange = (e) => {
      if (e?.detail?.lang) setLang(e.detail.lang);
    };
    window.addEventListener("languageChange", onLangChange);
    return () => window.removeEventListener("languageChange", onLangChange);
  }, []);

  const t =
    lang === "en"
      ? {
          login: "Login",
          rights: `Â© ${currentYear} All rights reserved`,
          joinUs: "Join from Zed stores",

        }
      : {
          login: "ØªØ³Ø¬ÙÙ Ø§ÙØ¯Ø®ÙÙ",
          joinUs: "Ø§ÙØ¶Ù ÙÙ ÙØªØ§Ø¬Ø± Ø²Ø¯",
          rights: `Â© ${currentYear} Ø¬ÙÙØ¹ Ø§ÙØ­ÙÙÙ ÙØ­ÙÙØ¸Ø©`,
        };

  const links = [
    { href: "/#hero", key: "home" },
    { href: "/#featuresClient", key: "features" },
    { href: "/#download", key: "download" },
  ];
  const socials = [
    { href: "#", alt: "Snap", icon: <SnapIcon /> },
    { href: "#", alt: "Twitter", icon: <TwitterIcon /> },
    { href: "#", alt: "Facebook", icon: <FacebookIcon /> },
    { href: "#", alt: "Instagram", icon: <InstagramIcon /> },
    { href: "#", alt: "TikTok", icon: <TikTokIcon /> },
  ];
  const [isOpen, setIsOpen] = useState(false);

  return (
    <footer dir={lang === "en" ? "ltr" : "rtl"} className="bg">
      <div className="mx-auto max-w-7xl px-6 py-12 lg:px-8">
        <div className="flex flex-wrap items-center justify-between gap-10">
        

           {/* Bouton Login */}
      <div className="flex justify-center">
        <button
          onClick={() => setShowLogin(true)}
          className="min-w-[97px]  text-[14px] p-3
          flex justify-center items-center bg-white text-black
          rounded-[36px] font-extrabold hover:bg-gray-200 transition"
        >
          {t.login}
        </button>
      </div>

      {/* Modal pour Login */}
      {showLogin && (
        <div className="fixed inset-0 bg-black/50  flex items-center justify-center z-50">
          <div className="bg-white text-black p-6 rounded-[16px] relative">
            <button
              onClick={() => setShowLogin(false)}
              className="absolute top-3 right-3 text-gray-600 hover:text-black"
            >
              â
            </button>
            {showLogin && (
            <LoginComponent isOpen={showLogin} setIsOpen={setShowLogin} />
             )}
          </div>
        </div>
      )}
        
          <a href="#" className="
          min-w-[97px]  text-[14px] p-3
          flex justify-center items-center bg-[#E1BD80] text-black
          rounded-[36px] font-extrabold hover:bg-gray-200 transition">
          {t.joinUs}
          </a>


          {/* Social */}
          <div className="min-w-[220px]">
            <div className="flex items-center gap-5">
              {socials.map((s) => (
                <a key={s.alt} href={s.href} aria-label={s.alt} className="inline-flex items-center justify-center" target="_blank" rel="noopener noreferrer">
                  {s.icon}
                </a>
              ))}
            </div>
          </div>
        </div>
        <div className="mt-8 border-t border-white/10 pt-6 text-center">
          <p className="text-[14px] text-white">{t.rights}</p>
        </div>
       
      </div>
    </footer>
  );
};

export default Footer;
